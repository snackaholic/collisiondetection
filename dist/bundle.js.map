{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://collision-canavas/./ts-output/canvas.js","webpack://collision-canavas/./ts-output/circle.js","webpack://collision-canavas/./ts-output/collision.js","webpack://collision-canavas/./ts-output/mouse.js","webpack://collision-canavas/./ts-output/types.js","webpack://collision-canavas/webpack/bootstrap","webpack://collision-canavas/./ts-output/main.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Canvas = void 0;\r\nvar collision_1 = require(\"./collision\");\r\nvar types_1 = require(\"./types\");\r\nvar Canvas = /** @class */ (function () {\r\n    function Canvas(config, items) {\r\n        this.domConfig = config;\r\n        this.items = items;\r\n        this.placeCanvas();\r\n        this.drawItems();\r\n    }\r\n    Canvas.prototype.flipDirection = function (item) {\r\n        if (item.getDirection() === types_1.Direction.Up) {\r\n            item.setDirection(types_1.Direction.Down);\r\n            return;\r\n        }\r\n        if (item.getDirection() === types_1.Direction.Down) {\r\n            item.setDirection(types_1.Direction.Up);\r\n            return;\r\n        }\r\n        if (item.getDirection() === types_1.Direction.Left) {\r\n            item.setDirection(types_1.Direction.Right);\r\n            return;\r\n        }\r\n        if (item.getDirection() === types_1.Direction.Right) {\r\n            item.setDirection(types_1.Direction.Left);\r\n            return;\r\n        }\r\n    };\r\n    Canvas.prototype.handleCollision = function (itema, itemb) {\r\n        this.flipDirection(itema);\r\n        this.flipDirection(itemb);\r\n    };\r\n    Canvas.prototype.calculateCollisions = function () {\r\n        var knownCollisions = [];\r\n        // check if items collide with each other\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var itema = this.items[i];\r\n            if (!itema.collideable()) {\r\n                continue;\r\n            }\r\n            for (var j = 0; j < this.items.length; j++) {\r\n                var skip = false;\r\n                // we dont compare if already calculated this collision\r\n                for (var k = 0; k < knownCollisions.length; k++) {\r\n                    var collisionObject = knownCollisions[k];\r\n                    if ((collisionObject.index1 == i && collisionObject.index2 == j) ||\r\n                        (collisionObject.index1 == j && collisionObject.index2 == i)) {\r\n                        // already computed -> skip\r\n                        skip = true;\r\n                    }\r\n                }\r\n                // we dont compare with ourselves...\r\n                if (j != i && !skip) {\r\n                    var itemb = this.items[j];\r\n                    if (!itemb.collideable()) {\r\n                        continue;\r\n                    }\r\n                    // check if one edge is within other item\r\n                    if ((0, collision_1.doCanvasItemsCollide)(itema, itemb)) {\r\n                        knownCollisions.push({ index1: i, index2: j });\r\n                        this.handleCollision(itema, itemb);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Canvas.prototype.update = function (time) {\r\n        // calculate each items new position\r\n        this.items.forEach(function (item) { return item.update(time); });\r\n    };\r\n    Canvas.prototype.calculateEdgeCollision = function () {\r\n        var _this = this;\r\n        // correct if circle is out of edge from canvas\r\n        this.items.forEach(function (item) {\r\n            if (item.x < 0) {\r\n                var distanceX = item.xEnd - item.x;\r\n                item.x = 0;\r\n                item.xEnd = 0 + distanceX;\r\n                item.setDirection(types_1.Direction.Right);\r\n            }\r\n            if (item.y < 0) {\r\n                var distanceY = item.yEnd - item.y;\r\n                item.y = 0;\r\n                item.yEnd = 0 + distanceY;\r\n                item.setDirection(types_1.Direction.Down);\r\n            }\r\n            if (item.xEnd > _this.domConfig.width) {\r\n                var distanceX = item.xEnd - item.x;\r\n                item.x = _this.domConfig.width - distanceX;\r\n                item.xEnd = _this.domConfig.width;\r\n                item.setDirection(types_1.Direction.Left);\r\n            }\r\n            if (item.yEnd > _this.domConfig.height) {\r\n                var distanceY = item.yEnd - item.y;\r\n                item.y = _this.domConfig.height - distanceY;\r\n                item.yEnd = _this.domConfig.height;\r\n                item.setDirection(types_1.Direction.Up);\r\n            }\r\n        });\r\n    };\r\n    Canvas.prototype.placeCanvas = function () {\r\n        var ref = document.createElement(\"canvas\");\r\n        ref.width = this.domConfig.width;\r\n        ref.height = this.domConfig.height;\r\n        ref.id = \"canvas\";\r\n        document.body.prepend(ref);\r\n        this.self = document.getElementById(\"canvas\");\r\n        this.context = this.self.getContext(\"2d\");\r\n    };\r\n    Canvas.prototype.clear = function () {\r\n        // Store the current transformation matrix\r\n        this.context.save();\r\n        // Use the identity matrix while clearing the canvas\r\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n        this.context.clearRect(0, 0, this.domConfig.width, this.domConfig.height);\r\n        // Restore the transform context\r\n        this.context.restore();\r\n    };\r\n    Canvas.prototype.drawItems = function () {\r\n        var _this = this;\r\n        this.items.forEach(function (item) { return item.draw(_this.context); });\r\n        return true;\r\n    };\r\n    return Canvas;\r\n}());\r\nexports.Canvas = Canvas;\r\n//# sourceMappingURL=canvas.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\nvar types_1 = require(\"./types\");\r\nvar Circle = /** @class */ (function () {\r\n    function Circle(startpositon) {\r\n        this.x = startpositon.x;\r\n        this.y = startpositon.y;\r\n        this.xEnd = startpositon.xEnd;\r\n        this.yEnd = startpositon.yEnd;\r\n        this.radius = (this.xEnd - this.x) / 2;\r\n        this.currentDirection = types_1.Direction.Unset;\r\n    }\r\n    Circle.prototype.collideable = function () {\r\n        return true;\r\n    };\r\n    Circle.prototype.getType = function () {\r\n        return types_1.CanvasDrawableItemTypes.Circle;\r\n    };\r\n    Circle.prototype.getDirection = function () {\r\n        return this.currentDirection;\r\n    };\r\n    Circle.prototype.setDirection = function (direciton) {\r\n        this.currentDirection = direciton;\r\n    };\r\n    Circle.prototype.update = function (time) {\r\n        if (this.currentDirection != types_1.Direction.Unset) {\r\n            if (this.currentDirection === types_1.Direction.Down) {\r\n                this.y += time;\r\n                this.yEnd += time;\r\n            }\r\n            if (this.currentDirection === types_1.Direction.Up) {\r\n                this.y -= time;\r\n                this.yEnd -= time;\r\n            }\r\n            if (this.currentDirection === types_1.Direction.Left) {\r\n                this.x -= time;\r\n                this.xEnd -= time;\r\n            }\r\n            if (this.currentDirection === types_1.Direction.Right) {\r\n                this.x += time;\r\n                this.xEnd += time;\r\n            }\r\n        }\r\n    };\r\n    /*      xy       xend\r\n            ---------\r\n            |       |\r\n            |   p   |\r\n            |       |\r\n            ---------\r\n            yend\r\n    */\r\n    Circle.prototype.draw = function (context) {\r\n        var distanceX = this.xEnd - this.x;\r\n        var distanceY = this.yEnd - this.y;\r\n        this.radiusX = this.x + distanceX / 2;\r\n        this.radiusY = this.y + distanceY / 2;\r\n        context.beginPath();\r\n        context.arc(this.radiusX, this.radiusY, this.radius, 0, 2 * Math.PI, false);\r\n        context.stroke();\r\n        if (this.drawRectHitbox) {\r\n            context.rect(this.x, this.y, this.xEnd - this.x, this.yEnd - this.y);\r\n            context.stroke();\r\n        }\r\n    };\r\n    return Circle;\r\n}());\r\nexports.Circle = Circle;\r\n//# sourceMappingURL=circle.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.doCanvasItemsCollide = void 0;\r\nvar types_1 = require(\"./types\");\r\nfunction doRectanglesCollide(rectangle1, rectangle2) {\r\n    // starting x point of rectangle 1 greater than endpoint x of rectangle 2\r\n    if (rectangle1.x > rectangle2.x + rectangle2.width ||\r\n        // end x point of r rectangle 1 smaller than startpoint x of rectangle 2\r\n        rectangle1.x + rectangle1.width < rectangle2.x ||\r\n        // starting y point of rectangle 1 greater than endpoint y of rectangle 2\r\n        rectangle1.y > rectangle2.y + rectangle2.height ||\r\n        // end y point of rectangle 1 smaller  than start y point of rectangle 2\r\n        rectangle1.y + rectangle1.height < rectangle2.y) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction doCirclesCollide(cirlce1, circle2) {\r\n    var distanceX = circle2.x - cirlce1.x;\r\n    var distanceY = circle2.y - cirlce1.y;\r\n    var distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\r\n    var sumRadius = cirlce1.radius + circle2.radius;\r\n    if (distance < sumRadius) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction doCanvasItemsCollide(item1, item2) {\r\n    var type1 = item1.getType();\r\n    var type2 = item2.getType();\r\n    if (type1 === types_1.CanvasDrawableItemTypes.Mouse) {\r\n        type1 = types_1.CanvasDrawableItemTypes.Rectangle;\r\n    }\r\n    if (type2 === types_1.CanvasDrawableItemTypes.Mouse) {\r\n        type2 = types_1.CanvasDrawableItemTypes.Rectangle;\r\n    }\r\n    if (type1 === types_1.CanvasDrawableItemTypes.Circle && type2 === types_1.CanvasDrawableItemTypes.Circle) {\r\n        return doCirclesCollide(getCircleFromDrawableItem(item1), getCircleFromDrawableItem(item2));\r\n    }\r\n    else {\r\n        // fallback calculation based on rectangle\r\n        return doRectanglesCollide(getRectangleFromDrawableItem(item1), getRectangleFromDrawableItem(item2));\r\n    }\r\n}\r\nexports.doCanvasItemsCollide = doCanvasItemsCollide;\r\nfunction getCircleFromDrawableItem(item) {\r\n    var itemascircle = item;\r\n    return { x: itemascircle.x, y: itemascircle.y, radius: itemascircle.radius, radiusX: itemascircle.radiusX, radiusY: itemascircle.radiusY };\r\n}\r\nfunction getRectangleFromDrawableItem(item) {\r\n    return {\r\n        width: item.xEnd - item.x,\r\n        height: item.yEnd - item.y,\r\n        x: item.x,\r\n        y: item.y\r\n    };\r\n}\r\nfunction isPointWithinItem(point, item) {\r\n    var x = point.x;\r\n    var y = point.y;\r\n    if (x > item.x && x < item.xEnd && y > item.y && y < item.yEnd) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n// since collision means they already in each other -> we undo this in this function. \"push\" them away from each other\r\nfunction setOuterForItems(itema, itemb) {\r\n    var itemaTopLeft = { x: itema.x, y: itema.y };\r\n    var itemaTopRight = { x: itema.xEnd, y: itema.y };\r\n    var itemaBottomLeft = { x: itema.xEnd, y: itema.y };\r\n    var itemaBottomRight = { x: itema.xEnd, y: itema.yEnd };\r\n    if (this.isPointWithinItem(itemaTopLeft, itemb)) {\r\n        if (itema.getDirection() === types_1.Direction.Down) {\r\n            itema.x = itemb.xEnd;\r\n            itema.xEnd = itema.x + 50;\r\n            itema.y = itemb.yEnd;\r\n            itema.yEnd = itema.y + 50;\r\n        }\r\n    }\r\n    if (this.isPointWithinItem(itemaTopRight, itemb)) {\r\n        if (itema.getDirection() === types_1.Direction.Left) {\r\n            itema.xEnd = itemb.x;\r\n            itema.x = itema.xEnd - 50;\r\n            itema.yEnd = itema.y;\r\n            itema.y = itema.yEnd - 50;\r\n        }\r\n    }\r\n    if (this.isPointWithinItem(itemaBottomLeft, itemb)) {\r\n        if (itema.getDirection() === types_1.Direction.Up) {\r\n            itema.xEnd = itema.x;\r\n            itema.x = itema.xEnd - 50;\r\n            itema.yEnd = itema.y;\r\n            itema.y = itema.yEnd - 50;\r\n        }\r\n    }\r\n    if (this.isPointWithinItem(itemaBottomRight, itemb)) {\r\n        if (itema.getDirection() === types_1.Direction.Left) {\r\n            itema.xEnd = itemb.x;\r\n            itema.x = itema.xEnd - 50;\r\n            itema.yEnd = itemb.y;\r\n            itema.y = itema.yEnd - 50;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=collision.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Mouse = void 0;\r\nvar types_1 = require(\"./types\");\r\nvar Mouse = /** @class */ (function () {\r\n    function Mouse() {\r\n        document.addEventListener('mousemove', this.tellPos.bind(this), false);\r\n        this.size = 50;\r\n        this.drawRectHitbox = true;\r\n    }\r\n    Mouse.prototype.collideable = function () {\r\n        return this.x != undefined && this.y != undefined;\r\n    };\r\n    Mouse.prototype.getType = function () {\r\n        return types_1.CanvasDrawableItemTypes.Mouse;\r\n    };\r\n    Mouse.prototype.tellPos = function (p) {\r\n        var info = document.getElementById('info');\r\n        info.innerHTML = 'Position X : ' + p.pageX + '<br />Position Y : ' + p.pageY;\r\n        this.x = p.pageX - (this.size / 2);\r\n        this.xEnd = this.x + this.size;\r\n        this.y = p.pageY - (this.size / 2);\r\n        this.yEnd = this.y + this.size;\r\n    };\r\n    Mouse.prototype.draw = function (context) {\r\n        var distanceX = this.xEnd - this.x;\r\n        var distanceY = this.yEnd - this.y;\r\n        var px = this.x + distanceX / 2;\r\n        var py = this.y + distanceY / 2;\r\n        var radius = distanceX / 2;\r\n        if (this.drawCircle) {\r\n            context.beginPath();\r\n            context.arc(px, py, radius, 0, 2 * Math.PI, false);\r\n            context.stroke();\r\n        }\r\n        if (this.drawRectHitbox) {\r\n            context.beginPath();\r\n            context.rect(this.x, this.y, this.xEnd - this.x, this.yEnd - this.y);\r\n            context.stroke();\r\n        }\r\n    };\r\n    Mouse.prototype.update = function (time) {\r\n    };\r\n    Mouse.prototype.setDirection = function (direciton) {\r\n    };\r\n    Mouse.prototype.getDirection = function () {\r\n        return types_1.Direction.Up;\r\n    };\r\n    return Mouse;\r\n}());\r\nexports.Mouse = Mouse;\r\n//# sourceMappingURL=mouse.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasDrawableItemTypes = exports.Direction = void 0;\r\nvar Direction;\r\n(function (Direction) {\r\n    Direction[Direction[\"Up\"] = 0] = \"Up\";\r\n    Direction[Direction[\"Down\"] = 1] = \"Down\";\r\n    Direction[Direction[\"Left\"] = 2] = \"Left\";\r\n    Direction[Direction[\"Right\"] = 3] = \"Right\";\r\n    Direction[Direction[\"Unset\"] = 4] = \"Unset\";\r\n})(Direction = exports.Direction || (exports.Direction = {}));\r\nvar CanvasDrawableItemTypes;\r\n(function (CanvasDrawableItemTypes) {\r\n    CanvasDrawableItemTypes[CanvasDrawableItemTypes[\"Circle\"] = 0] = \"Circle\";\r\n    CanvasDrawableItemTypes[CanvasDrawableItemTypes[\"Rectangle\"] = 1] = \"Rectangle\";\r\n    CanvasDrawableItemTypes[CanvasDrawableItemTypes[\"Mouse\"] = 2] = \"Mouse\";\r\n})(CanvasDrawableItemTypes = exports.CanvasDrawableItemTypes || (exports.CanvasDrawableItemTypes = {}));\r\n//# sourceMappingURL=types.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar canvas_1 = require(\"./canvas\");\r\nvar circle_1 = require(\"./circle\");\r\nvar mouse_1 = require(\"./mouse\");\r\nvar types_1 = require(\"./types\");\r\nfunction randomNumber(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\nfunction randomDirection() {\r\n    var num = randomNumber(4);\r\n    if (num === 0) {\r\n        return types_1.Direction.Up;\r\n    }\r\n    if (num === 1) {\r\n        return types_1.Direction.Down;\r\n    }\r\n    if (num === 2) {\r\n        return types_1.Direction.Left;\r\n    }\r\n    if (num === 3) {\r\n        return types_1.Direction.Right;\r\n    }\r\n}\r\n// actual drawn window specs\r\nvar documentYMax = window.innerHeight;\r\nvar documentXMax = window.innerWidth;\r\nvar spawnRandom = true;\r\nvar spawnCollisionTest = false;\r\n// canvas items\r\nvar items = [];\r\nvar maxXItems = Math.floor(documentXMax / 50);\r\nvar maxYItems = Math.floor(documentYMax / 50);\r\nif (spawnRandom) {\r\n    for (var i = 0; i < maxXItems; i++) {\r\n        for (var j = 0; j < maxYItems; j++) {\r\n            var randomNum = randomNumber(10);\r\n            if (randomNum === 5) {\r\n                var circle = new circle_1.Circle({ x: i * 50, y: j * 50, xEnd: i * 50 + 50, yEnd: j * 50 + 50 });\r\n                circle.setDirection(randomDirection());\r\n                items.push(circle);\r\n            }\r\n        }\r\n    }\r\n}\r\nif (spawnCollisionTest) {\r\n    var circle = new circle_1.Circle({ x: 50, y: 0, xEnd: 100, yEnd: 50 });\r\n    circle.setDirection(types_1.Direction.Down);\r\n    items.push(circle);\r\n    var circle2 = new circle_1.Circle({ x: 50, y: 550, xEnd: 100, yEnd: 600 });\r\n    circle2.setDirection(types_1.Direction.Up);\r\n    items.push(circle2);\r\n    var circle5 = new circle_1.Circle({ x: 50, y: 750, xEnd: 100, yEnd: 800 });\r\n    circle5.setDirection(types_1.Direction.Up);\r\n    items.push(circle5);\r\n    var circle3 = new circle_1.Circle({ x: 500, y: 0, xEnd: 550, yEnd: 50 });\r\n    circle3.setDirection(types_1.Direction.Left);\r\n    items.push(circle3);\r\n    var circle4 = new circle_1.Circle({ x: 300, y: 0, xEnd: 350, yEnd: 50 });\r\n    circle4.setDirection(types_1.Direction.Right);\r\n    items.push(circle4);\r\n}\r\nitems.push(new mouse_1.Mouse());\r\n// canvas settings\r\n// fullscreen / monitor specs\r\nvar windowXMax = window.outerWidth;\r\nvar windowYMax = window.outerHeight;\r\nvar config = { width: documentXMax, height: documentYMax };\r\nvar canvas = new canvas_1.Canvas(config, items);\r\nfunction loop(timestamp) {\r\n    var progress = (timestamp - lastRender);\r\n    canvas.clear();\r\n    canvas.update(2);\r\n    canvas.calculateCollisions();\r\n    canvas.calculateEdgeCollision();\r\n    canvas.drawItems();\r\n    lastRender = timestamp;\r\n    window.requestAnimationFrame(loop);\r\n}\r\nvar lastRender = 0;\r\nwindow.requestAnimationFrame(loop);\r\n//# sourceMappingURL=main.js.map"],"names":["Object","defineProperty","exports","value","Canvas","collision_1","types_1","config","items","this","domConfig","placeCanvas","drawItems","prototype","flipDirection","item","getDirection","Direction","Up","Down","Left","Right","setDirection","handleCollision","itema","itemb","calculateCollisions","knownCollisions","i","length","collideable","j","skip","k","collisionObject","index1","index2","doCanvasItemsCollide","push","update","time","forEach","calculateEdgeCollision","_this","x","distanceX","xEnd","y","distanceY","yEnd","width","height","ref","document","createElement","id","body","prepend","self","getElementById","context","getContext","clear","save","setTransform","clearRect","restore","draw","Circle","startpositon","radius","currentDirection","Unset","getType","CanvasDrawableItemTypes","direciton","radiusX","radiusY","beginPath","arc","Math","PI","stroke","drawRectHitbox","rect","getCircleFromDrawableItem","itemascircle","getRectangleFromDrawableItem","item1","item2","rectangle1","rectangle2","cirlce1","circle2","type1","type2","Mouse","Rectangle","sqrt","addEventListener","tellPos","bind","size","undefined","p","innerHTML","pageX","pageY","px","py","drawCircle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","canvas_1","circle_1","mouse_1","randomNumber","max","floor","random","num","documentYMax","window","innerHeight","documentXMax","innerWidth","maxXItems","maxYItems","circle","outerWidth","outerHeight","canvas","requestAnimationFrame","loop","timestamp"],"sourceRoot":""}